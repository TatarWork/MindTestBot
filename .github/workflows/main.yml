name: Deploy on Tag Release

on:
  push:
    tags:
      - 'v*.*.*' # Шаблон для тегов версий (v1.0.0, v2.1.3 и т.д.)

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Полная история для чтения тегов

      - name: Extract version from tag
        id: extract_version
        run: |
          echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
          echo "Extracted version: ${{ env.VERSION }}"

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        working-directory: ./src/MindTestBot/MindBot.Web  # Укажите вашу папку с проектом
        run: dotnet restore

      - name: Build
        working-directory: ./src/
        run: dotnet build -c Release /p:Version=${{ env.VERSION }}

      - name: Publish
        working-directory: ./src/MindTestBot/MindBot.Web
        run: dotnet publish -c Release -o ./publish

      - name: Prepare deployment package
        run: |
          mkdir -p deploy
          cp -r ./publish/* deploy/
          echo "Version: ${{ env.VERSION }}" > deploy/version.txt
          tar -czvf deploy.tar.gz deploy/

      - name: Deploy to Beget VPS
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          script: |
            # Создаем папку с версией
            DEPLOY_DIR="/home/deployer/releases/mindbot/${{ env.VERSION }}"
            mkdir -p $DEPLOY_DIR
            
            # Распаковываем архив
            tar -xzvf deploy.tar.gz -C $DEPLOY_DIR
            
            # Обновляем симлинк на текущую версию
            CURRENT_DIR="/home/deployer/apps/mindbot"
            ln -sfn $DEPLOY_DIR $CURRENT_DIR
            
            # Применяем миграции БД
            cd $CURRENT_DIR
            dotnet ef database update
            
            # Рестарт сервиса
            sudo systemctl restart mindbot.service
            
            # Очистка старых релизов (храним последние 5)
            ls -dt /home/deployer/releases/mindbot/* | tail -n +6 | xargs rm -rf
            
            echo "Successfully deployed version ${{ env.VERSION }}"
